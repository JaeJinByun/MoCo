buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    //queryDsl 추가
    id 'com.ewerk.gradle.plugins.querydsl' version "1.0.10"
    id 'java'
}

jar {
    enabled = false
}

group = 'com.board'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.7.5'

    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

    //querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}" //querydsl 라이브러리
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}" //Querydsl 관련 코드 생성 기능 제공
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"


    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'io.github.furstenheim:copy_down:1.1'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.11'


    testImplementation 'junit:junit:4.13.1'
    compileOnly 'org.jetbrains:annotations:13.0'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

//Qtype 생성 경로
def querydslDir = "$buildDir/generated"
querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets { //IDE의 소스 폴더에 자동으로 넣어준다
    main {
        java {
            srcDirs = ['src/main/java', querydslDir]
        }
    }
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl //Q파일 생성
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath // 컴파일이 될때 같이 수행
}


clean {
    //delete file(querydslDir)
}